{"version":3,"sources":["components/square.js","components/board.js","components/game.js","helper.js","index.js"],"names":["square","value","onClick","style","className","board","squares","map","i","Game","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","xO","historyPoint","slice","current","_step","move","destination","step","ReactDom","render","document","getElementById"],"mappings":"2NAYeA,EAVA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACfC,EAAQF,EAAK,kBAAcA,GAAd,UAEnB,OACI,wBAAQG,UAAWD,EAAOD,QAASA,EAAnC,SACKD,KCIEI,EARD,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASJ,EAAZ,EAAYA,QAAZ,OACV,qBAAKE,UAAU,QAAf,SACKE,EAAQC,KAAI,SAACP,EAAQQ,GAAT,OACT,cAAC,EAAD,CAAgBP,MAAOD,EAAQE,QAAS,kBAAMA,EAAQM,KAAzCA,SCgDVC,EAlDF,WACX,MAA8BC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QAAtD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACMC,ECRD,SAAyBb,GAW5B,IAVA,IAAMc,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CACnC,kBAAkBY,EAAMZ,GAAxB,GAAOc,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIlB,EAAQgB,IAAMhB,EAAQgB,KAAOhB,EAAQiB,IAAMjB,EAAQgB,KAAOhB,EAAQkB,GAClE,OAAOlB,EAAQgB,GAGvB,OAAO,KDTMG,CAAgBZ,EAAQE,IACjCW,EAAKT,EAAU,IAAM,IA8B3B,OACE,qCACE,gEACA,cAAC,EAAD,CAAOX,QAASO,EAAQE,GAAab,QA/BrB,SAACM,GACnB,IAAMmB,EAAed,EAAQe,MAAM,EAAGb,EAAa,GAC7Cc,EAAUF,EAAaZ,GACvBT,EAAO,YAAOuB,GAEhBV,GAAUb,EAAQE,KAEtBF,EAAQE,GAAKkB,EACbZ,EAAW,GAAD,mBAAKa,GAAL,CAAmBrB,KAC7BU,EAAcW,EAAaN,QAC3BH,GAAYD,OAsBV,sBAAKb,UAAU,eAAf,UACE,gCACE,yCAfNS,EAAQN,KAAI,SAACuB,EAAOC,GAClB,IAAMC,EAAcD,EAAI,sBAAkBA,GAAS,cACnD,OACE,6BACE,wBAAQ7B,QAAS,kBATvBc,EADciB,EAUsBF,QARpCb,EAAWe,EAAO,IAAM,GAFX,IAACA,GAUR,SAAsCD,KAD/BD,SAeT,6BAAKZ,EAAS,WAAaA,EAAS,gBAAkBO,WE3C9DQ,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.5ced275d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst square = ({ value, onClick }) => {\r\n    const style = value ? `squares ${value}` : `squares`;\r\n\r\n    return (\r\n        <button className={style} onClick={onClick}>\r\n            {value}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default square;","import React from \"react\";\r\nimport Square from \"./square\";\r\n\r\nconst board = ({ squares, onClick }) => (\r\n    <div className=\"board\">\r\n        {squares.map((square, i) =>\r\n            <Square key={i} value={square} onClick={() => onClick(i)} />\r\n        )}\r\n    </div>\r\n);\r\n\r\nexport default board;","import React, { useState } from \"react\";\r\nimport { calculateWinner } from \"../helper\";\r\nimport Board from \"./board\";\r\n\r\nconst Game = () => {\r\n  const [history, setHistory] = useState([Array(9).fill(null)]);\r\n  const [stepNumber, setStepNumber] = useState(0);\r\n  const [xIsNext, setXisNext] = useState(true);\r\n  const winner = calculateWinner(history[stepNumber]);\r\n  const xO = xIsNext ? \"X\" : \"O\";\r\n\r\n  const handleClick = (i) => {\r\n    const historyPoint = history.slice(0, stepNumber + 1);\r\n    const current = historyPoint[stepNumber];\r\n    const squares = [...current];\r\n    // return if won or occupied\r\n    if (winner || squares[i]) return;\r\n    // select square\r\n    squares[i] = xO;\r\n    setHistory([...historyPoint, squares]);\r\n    setStepNumber(historyPoint.length);\r\n    setXisNext(!xIsNext);\r\n  };\r\n\r\n  const jumpTo = (step) => {\r\n    setStepNumber(step);\r\n    setXisNext(step % 2 === 0);\r\n  };\r\n\r\n  const renderMoves = () =>\r\n    history.map((_step, move) => {\r\n      const destination = move ? `Go to move #${move}` : \"Go to Start\";\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => jumpTo(move)}>{destination}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <>\r\n      <h1>React Tic Tac Toe - With Hooks</h1>\r\n      <Board squares={history[stepNumber]} onClick={handleClick} />\r\n      <div className=\"info-wrapper\">\r\n        <div>\r\n          <h3>History</h3>\r\n          {renderMoves()}\r\n        </div>\r\n        <h3>{winner ? \"Winner: \" + winner : \"Next Player: \" + xO}</h3>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;","export function calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Game from \"./components/game\"\r\n\r\nReactDom.render(<Game />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}